Preparando o ambiente

2.1 Instalação do Python.

2.2 Usando o interpretador Python (No linux abra o terminal 
e digite: idle-python3.8 &)

2.3 Editando arquivos (Escolha um editor de textos disponíveis, 
entre eles, o Vim, VSCode, Pycharm enfim o que você mais gostar); 
há a opção de utilizar o editor de textos do interpretador. 
Vá em File, abra a opção New File e aparecerá uma nova janela. 
Chamaremos a primeira de janela do interpretador, e a segunda 
de janela de editor de textos.
Experimente um pouco, escrevendo:

print("Oi")

Vamos salvar o programa. Clicar no Save do menu File.
Abrirá uma janela padrão de gravação de arquivos.
Escreva teste.py e save.
Lembre-se sempre de salvar os arquivos utilizando a extensão .py.
Clique no menu Run ou F5 para executar seu programa.
Seu programa executará na outra janela do interpretador. Aparecerá RESTART.

2.4 Cuidado ao digitar os seus programas

1. letras maiúsculas e minúsculas são diferentes;
2. aspas são muito importantes e não devem ser esquecidas. 
Abra e fecha aspas sempre.
3. Parênteses não são opcionais em Python.Todo Parêntese aberto 
deve ser fechado. 
4. espaços são muito importantes. Não se esqueça disto.

2.5 Primeiros programas

Vamos aprender o nome de cada função que aparece no programa:
print - função;
() - Parênteses;
"" - aspas;
Oi - mensagem. 

A função PRINT informa que vamos exibir algo na tela, ou seja, 
uma mensagem na tela do computador.

Uma operação de cálculo, pergunta ou mensagem utilizaremos 
sempre o print.

Podemos fazer diversas funções utilizando a idle como calculadora:
adição: 2+4
6

subtração: 5-3
2

adição e subtração: 10-4+2
8

multiplicação: 2*10
20

divisão: 20/4
5.0

divisão sem resultados inteiros
10/4
2.5

Se calcular a divisão inteira, o resto, utilizar duas barras:
10//4
2

exponenciação: 2**3
8

Podemos também obter o resto da divisão de dois números 
usando o símbolo de %. Assim, para calcularmos o resto 
da divisão entre 10 e 3, digitamos:

10%3
1

16%7
2

63%8
7


Tabela 1. Operadores e operações matemáticas
+

soma dois valores

5 + 2 resulta em 7

-

subtrai dois valores

5 - 2 resulta em 3

*

multiplica dois valores

5 * 2 resulta em 10

/

divide dois valores (sem arredondar)

5 / 2 resulta em 2.5

//

divide dois valores (arredondando para baixo)

5 // 2 resulta em 2

%

resto da divisão

5 % 2 resulta em 1

**

exponenciação

5 ** 2 resulta em 25

Existe uma ordem para a execução de uma operação. Os Parênteses 
em Python são utilizados da mesma forma que nas expressões 
matemáticas.
Para tanto, segue-se uma sequência lógica na ordem de precedência 
das operações:

1. Exponenciação ou potenciação (**);
2. Multiplicação (*), divisão (/ e //) e módulo (%);
3. Adição (+) e subtração (-).

Exemplo:

A expressão 1500+(1500*5/100) é equivalente a:

                    1500 + (1500x5)/(100)

Exercício 2.1 Converta as seguintes expressões matemáticas 
para que possam ser calculadas usando o Idle Python

10+10*30

4**2/30

(9****+2) * 6-1

Exercício 2.2 Digite a seguinte expressão no interpretador:

10 % 3 * 10 ** 2 + 1 - 10 * 4 / 2

Tente resolver `a mão o exercício. Observe como é importante 
a ordem das operações. 


2.6 Conceito de variáveis e atribuição.

O interpretador além das operações simples pode fazer operações 
complexas;

Em matemática o conceito de variavel para representar incógnitas
em equações do tipo x + 1 = 2, em que temos determinar o 
valor de x para resolver a equação;

Já em programação, as variáveis são utilizadas para armazenar 
valores e dar nome a uma área de memória do computador onde 
armazenamos dados;

Imagine o computador como um grande armário: para armazenar algo
em uma das gavetas utilizaremos = (sinal de igualdade) entre o 
nome do compartimento e o valor que iremos guardar;

Isso é denominado operação de atribuição;

Ao lermos o nosso programa, as operações de atribuição serão
chamadas de "recebe", ou seja, uma variável recebe um valor;
Ao programarmos é importante descrever os passos para a solução
do problema de forma minuciosa e clara, de forma que se tivermos 
de alterá-lo possamos entender os passos;

Quando escrevemos print(2 + 3), o problema foi representado
como sendo a soma de 2 e 3. Isso permite entender de forma 
clara o que o programa faz;

Já se escrevermos print(5) não teremos a mesma compreensão,
e o computador somente entenderá que é para imprimir o 
número 5 e não deixamos claro que queríamos fazer uma soma;
 
 - Vamos aos exemplos:

 # Programa 2.2 - Cálculo de aumento de salário
 salario = 1500 #1
 aumento = 5    #2
 print(salario * (aumento / 100)) #3

Em 1 temos uma variável que é chamada salario recebendo
o valor 1500. Em 2 outra, aumento, recebe o valor 5. 
Já em 3 está descrita a fórmula que calculará o valor 
do novo salário depois de receber um aumento, tendo 
como resultado:

 >>> salario = 1500
 >>> aumento = 5
 >>> print(salario + (salario * aumento / 100))
 1575.0

 Esse programa pode ser escrito de forma mais direta 
 utilizando outra fórmula sem variáveis:

 # Programa 2.3 - Alternativa para o cálculo de 
 aumento de salário
 
 print(1500 + (1500 *5 / 100)) 

Tanto um exemplo como o outro se mostra correto, porém,
no segundo temos que alterar mais valores caso precise 
de correção futura e aumenta a chance de esquecermos de
uma delas dando resultado incorreto.

Na utilização das variáveis podemos referenciar 
os valores várias vezes, sem utilizar necessariamente x ou y. 
No exemplo Programa 2.2, a fórmula para o cálculo do aumento foi especificando o nome de cada variável o que auxiliou na leitura e entendimento.

Assim como o Excel ou Calc., o conceito 
de variável pode ser entendido como as 
células de uma planilha eletrônica.

Exercícios:

Exercício 2.3 Faça um programa que exiba seu nome na tela.

Resposta:

>>> print('Robinson')
Robinson


Exercício 2.4 Escreve um programa que exiba 
o resultado de 2a x 3b, em a vale 3 e b vale 5.

Resposta:

>>> a = 2
>>> b = 5
>>> print(2 * 5)
10


Exercício 2.5 Escreva um programa que calcule a soma 
de três variáveis e imprima o resultado na tela.

Resposta:

>>> beneficio = 1045
>>> aumento = 200
>>> print(beneficio + (beneficio * aumento / 100))
3135.0


Exercício 2.6 Modifique o Programa 2.2, de forma que ele 
calcule um aumento de 15% para um salário de R$ 750,00.

Resposta:

>>> salario = 750
>>> aumento = 15
>>> print(salario + (salario * aumento / 100))
862.5





